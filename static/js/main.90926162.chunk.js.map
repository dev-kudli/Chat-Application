{"version":3,"sources":["context/AccountProvider.jsx","context/UserProvider.jsx","components/loader/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["AccountContext","createContext","AccountProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","account","setAccount","_useState3","_useState4","showloginButton","setShowloginButton","_useState5","_useState6","showlogoutButton","setShowlogoutButton","_useState7","_useState8","activeUsers","setActiveUsers","_useState9","_useState10","newMessageFlag","setNewMessageFlag","socket","useRef","useEffect","current","io","_jsx","Provider","value","UserContext","UserProvider","person","setPerson","Loader","CircularProgress","Messenger","lazy","App","GoogleOAuthProvider","clientId","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qKAGaA,EAAiBC,wBAAc,MAqC7BC,IAnCS,SAAHC,GAAoB,IAAfC,EAAQD,EAARC,SAEtBC,EAAgCC,qBAAUC,EAAAC,YAAAH,EAAA,GAAlCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC3BI,EAA8CL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAArDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAAgDT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAE5CG,EAAsCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA4CjB,oBAAS,GAAMkB,EAAAhB,YAAAe,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,EAASC,mBAMf,OAJAC,qBAAU,WACNF,EAAOG,QAAUC,YAAG,uBACrB,IAGCC,cAAChC,EAAeiC,SAAQ,CAACC,MAAO,CAC5BzB,UACAC,aACAG,kBACAC,qBACAG,mBACAC,sBACAS,SACAN,cACAC,iBACAG,iBACAC,qBACFtB,SACGA,M,4FCjCA+B,EAAclC,wBAAc,MAa1BmC,IAXM,SAAHjC,GAAoB,IAAfC,EAAQD,EAARC,SAEnBC,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAlCgC,EAAM9B,EAAA,GAAE+B,EAAS/B,EAAA,GAEzB,OACIyB,cAACG,EAAYF,SAAQ,CAACC,MAAO,CAAEG,SAAQC,aAAYlC,SAC9CA,M,gJCDEmC,EANA,WACX,OACIP,cAACQ,IAAgB,KCKnBC,EAAYC,gBAAK,kBAAM,uDAmBdC,MAjBf,WAIE,OACEX,cAACY,IAAmB,CAACC,SAHN,2EAGyBzC,SACtC4B,cAACI,IAAY,CAAAhC,SACX4B,cAAC9B,IAAe,CAAAE,SACd4B,cAACc,WAAQ,CAACC,SAAUf,cAACO,EAAM,IAAInC,SAC7B4B,cAACS,EAAS,aCTPO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAAhD,GAAkD,IAA/CiD,EAAMjD,EAANiD,OAAQC,EAAMlD,EAANkD,OAAQC,EAAMnD,EAANmD,OAAQC,EAAMpD,EAANoD,OAAQC,EAAOrD,EAAPqD,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP1B,cAAC2B,IAAMC,WAAU,CAAAxD,SACf4B,cAACW,EAAG,MAENkB,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.90926162.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport const AccountContext = createContext(null);\r\n\r\nconst AccountProvider = ({children}) => {\r\n\r\n    const [ account, setAccount ] = useState();\r\n    const [showloginButton, setShowloginButton] = useState(true);\r\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\r\n\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    \r\n    const [newMessageFlag, setNewMessageFlag] = useState(false);\r\n\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io('ws://localhost:80');\r\n    }, [])\r\n\r\n    return (\r\n        <AccountContext.Provider value={{ \r\n            account, \r\n            setAccount, \r\n            showloginButton,\r\n            setShowloginButton,\r\n            showlogoutButton,\r\n            setShowlogoutButton,\r\n            socket,\r\n            activeUsers,\r\n            setActiveUsers,\r\n            newMessageFlag,\r\n            setNewMessageFlag\r\n        }}>\r\n            {children}\r\n        </AccountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AccountProvider;","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nconst UserProvider = ({children}) => {\r\n\r\n    const [ person, setPerson ] = useState({});\r\n    \r\n    return (\r\n        <UserContext.Provider value={{ person, setPerson }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider;","\r\nimport { CircularProgress } from \"@mui/material\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <CircularProgress />\r\n    )\r\n}\r\n\r\nexport default Loader;","import { lazy, Suspense } from 'react';\r\n\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\n//components\r\nimport UserProvider from './context/UserProvider';\r\nimport AccountProvider from './context/AccountProvider';\r\n\r\nimport Loader from './components/loader/Loader';\r\n\r\nconst Messenger = lazy(() => import('./components/Messenger'));\r\n\r\nfunction App() {\r\n\r\n  const clientId = '246648691460-bsj1rub53iami1btvii0577h1on2je01.apps.googleusercontent.com';\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId={clientId}>\r\n      <UserProvider>\r\n        <AccountProvider>\r\n          <Suspense fallback={<Loader />}>\r\n            <Messenger/>\r\n          </Suspense>\r\n        </AccountProvider>\r\n      </UserProvider>\r\n    </GoogleOAuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}