{"version":3,"sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","utils/common-utils.js","components/chat/menu/Conversation.jsx","constants/data.js","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"names":["ImageContainer","styled","Box","_templateObject","_taggedTemplateLiteral","Image","width","height","borderRadius","padding","BoxWrapper","_templateObject2","DescriptionContainer","_templateObject3","Profile","account","useContext","AccountContext","_jsxs","_Fragment","children","_jsx","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","InfoDrawer","_ref","open","setOpen","profile","Drawer","onClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","HeaderMenu","GoogleLogout","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","openDrawer","setOpenDrawer","_useContext","handleClose","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","UserContext","setPerson","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Wrapper","MessageIcon","Icon","InputField","InputBase","_templateObject4","Search","setText","SearchIcon","fontSize","placeholder","inputProps","onChange","e","target","value","url","addUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","response","wrap","_context","prev","next","axios","post","concat","headers","withCredentials","credentials","sent","console","log","abrupt","t0","stop","_x","apply","arguments","getUsers","_ref2","_callee2","_context2","get","getUserSession","_ref3","_callee3","_context3","setConversation","_ref5","_callee5","_context5","_x3","getConversation","_ref6","_callee6","users","_context6","_x4","getMessages","_ref7","_callee7","id","_context7","_x5","uploadFile","_ref9","_callee9","_context9","_x7","downloadMedia","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","display","href","duplicateName","split","pop","download","body","appendChild","click","revokeObjectURL","catch","error","_x2","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","Conversation","_message$text","user","_useContext2","newMessageFlag","message","setMessage","useEffect","senderId","sub","receiverId","text","timestamp","updatedAt","getConversationMessage","getUser","includes","StyledDivider","Divider","Conversations","setUsers","socket","setActiveUsers","fiteredUsers","filter","toLowerCase","fetchData","current","emit","on","map","index","length","Name","RightContainer","Status","ChatHeader","person","activeUsers","find","Own","Time","TextMessage","createdAt","ImageMessage","position","bottom","right","GetAppIcon","marginRight","border","Message","type","ClipIcon","AttachFile","Footer","sendText","setValue","setFile","file","setImage","FormData","append","getImage","EmojiEmotions","htmlFor","files","onFileChange","onKeyPress","Mic","Messages","_conversation$members2","conversation","messages","setMessages","incomingMessage","setIncomingMessage","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","image","scrollRef","useRef","setNewMessageFlag","_objectSpread","now","_id","getMessageDetails","_scrollRef$current","scrollIntoView","transition","_conversation$members","members","_toConsumableArray","member","code","keyCode","which","conversationId","ref","ChatBox","getConversationDetails","marginTop","Title","SubTitle","_templateObject5","EmptyChat","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","ChatDialog","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","LoginDialog","showloginButton","loginSuccessContextUpdate","userSession","onLoginSuccess","res","jwt_decode","credential","ListItem","transform","GoogleLogin","buttonText","onSuccess","onError","cookiePolicy","auto_select","AppBar","LoginHeader","Messenger","Toolbar"],"mappings":"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","file":"static/js/4.72d6f0c3.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { Box, styled, Typography } from \"@mui/material\"\r\n\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\n\r\nconst ImageContainer = styled(Box)`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Image = styled('img') ({\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    padding: '25px 0'\r\n});\r\n\r\nconst BoxWrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 12px 30px 2px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\r\n    & :first-child {\r\n        font-size: 13px;\r\n        color: #009688;\r\n        font-weight: 200;\r\n    };\r\n    & :last-child {\r\n        margin: 14px 0;\r\n        color: #4A4A4A;\r\n    }\r\n`;\r\n\r\nconst DescriptionContainer = styled(Box)`\r\n    padding: 15px 20px 28px 30px;\r\n    & > p {\r\n        color: #8696a0;\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nconst Profile = () => {\r\n\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n            <ImageContainer>\r\n                <Image src={account.picture} alt=\"displaypicture\" />\r\n            </ImageContainer>\r\n            <BoxWrapper>\r\n                <Typography>Your name</Typography>\r\n                <Typography>{account.name}</Typography>\r\n            </BoxWrapper>\r\n            <DescriptionContainer>\r\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\r\n            </DescriptionContainer>\r\n            <BoxWrapper>\r\n                <Typography>About</Typography>\r\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\r\n            </BoxWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { styled, Drawer, Box, Typography } from '@mui/material';\r\nimport { ArrowBack } from '@mui/icons-material';\r\n\r\n//components\r\nimport Profile from './Profile';\r\n\r\nconst Header = styled(Box)`\r\n  background: #008069;\r\n  height: 107px;\r\n  color: #FFFFFF;\r\n  display: flex;\r\n  & > svg, & > p {\r\n    margin-top: auto;\r\n    padding: 15px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Component = styled(Box)`\r\n  background: #ededed;\r\n  height: 85%;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 18px;\r\n`\r\n\r\nconst drawerStyle = {\r\n    left: 20,\r\n    top: 17,\r\n    height: '95%',\r\n    width: '30%',\r\n    boxShadow: 'none'\r\n}\r\n\r\nconst InfoDrawer = ({ open, setOpen, profile }) => {\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{ sx: drawerStyle }}\r\n            style={{ zIndex: 1500 }}\r\n        >\r\n            <Header>\r\n                <ArrowBack onClick={() => setOpen(false)} />\r\n                <Text>Profile</Text>\r\n            </Header>\r\n            <Component>\r\n                {profile && <Profile />}\r\n            </Component>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default InfoDrawer;","import { useState, useContext } from 'react';\r\n\r\nimport { MoreVert } from '@mui/icons-material';\r\nimport { Menu, MenuItem, styled } from '@mui/material';\r\n\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { UserContext } from '../../../context/UserProvider';\r\n\r\nimport { clientId } from '../../../constants/data';\r\n\r\n//components\r\nimport InfoDrawer from '../../drawer/Drawer';\r\n\r\nconst MenuOption = styled(MenuItem)`\r\n    font-size: 14px\r\n    padding: 15px 60px 5px 24px;\r\n    color: #4A4A4A;\r\n`;\r\n\r\nconst Logout = styled(GoogleLogout)`\r\n    border: none;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    \r\n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\r\n    const { setPerson } = useContext(UserContext);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const onSignoutSuccess = () => {\r\n        console.log('logout')\r\n        alert(\"You have been logged out successfully\");\r\n        console.clear();\r\n        setShowlogoutButton(false);\r\n        setShowloginButton(true);\r\n        setAccount('');\r\n        setPerson({});\r\n    };\r\n\r\n    const handleLogoutFailure = () => {\r\n        console.log('Logout Error')\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <MoreVert onClick={handleClick} />\r\n            <Menu\r\n                anchorEl={open}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <MenuOption onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuOption>\r\n                {/* <MenuOption onClick={() => { handleClose(); }}>\r\n                { showlogoutButton ?\r\n                    <Logout\r\n                        clientId={clientId}\r\n                        buttonText=\"Logout\"\r\n                        onLogoutSuccess={onSignoutSuccess}\r\n                        onFailure={handleLogoutFailure}\r\n                    >\r\n                    </Logout>: null\r\n                }\r\n                </MenuOption> */}\r\n            </Menu>\r\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderMenu;\r\n","import { useContext, useState } from 'react';\r\n\r\nimport { Box, styled } from '@mui/material';\r\nimport { Chat as MessageIcon } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport HeaderMenu from './HeaderMenu';\r\nimport InfoDrawer from '../../drawer/Drawer';\r\n\r\nconst Component = styled(Box)`\r\n    height: 44px;\r\n    background: #ededed;\r\n    display: flex;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled(Box) `\r\n    margin-left: auto;\r\n    & > * {\r\n        margin-left: 2px;\r\n        padding: 8px;\r\n        color: #000;\r\n    };\r\n    & :first-child {\r\n        font-size: 22px;\r\n        margin-right: 8px;\r\n        margin-top: 3px;\r\n    }\r\n`;\r\n    \r\nconst Image = styled('img') ({\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%'\r\n})\r\n\r\nconst Header = () => {\r\n    \r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Component>\r\n                <Image src={account.picture} onClick={() => toggleDrawer()} />\r\n                <Wrapper>\r\n                    <MessageIcon />\r\n                    <HeaderMenu/>\r\n                </Wrapper>\r\n            </Component>\r\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport { Box, InputBase, styled } from '@mui/material';\r\nimport { Search as SearchIcon } from '@mui/icons-material';\r\n\r\nconst Component = styled(Box)`\r\n    background: #fff;\r\n    height: 45px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid #F2F2F2;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n    position: relative;\r\n    border-radius: 10px;\r\n    background-color: #f0f2f5;\r\n    margin: 0 13px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Icon = styled(Box)`\r\n    color: #919191;\r\n    padding: 8px;\r\n    height: 100%;\r\n    position: absolute;\r\n`;\r\n      \r\nconst InputField = styled(InputBase) `\r\n    width: 100%;\r\n    padding: 16px;\r\n    padding-left: 65px;\r\n    font-size: 14px;\r\n    height: 15px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Search = ({ setText }) => {\r\n\r\n    return (\r\n        <Component>\r\n            <Wrapper>\r\n                <Icon>\r\n                    <SearchIcon fontSize=\"small\"/>\r\n                </Icon>\r\n                <InputField\r\n                    placeholder=\"Search or start new chat\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </Wrapper>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Search;","  \r\nimport axios from 'axios';\r\n\r\nconst url = 'http://localhost:8000';\r\n\r\nexport const addUser = async (data) => {\r\n    try {\r\n        let response = await axios.post(`${url}/add-user`, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        });\r\n        console.log(response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling addUser API ', error);\r\n    }\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    // try {\r\n    //     let response = await axios.get(`${url}/get-conversation?sub=${sub}`);\r\n    //     return response.data;\r\n    // } catch (error) {\r\n    //     console.log('Error while calling getUsers API ', error);\r\n    // }\r\n    try {\r\n        let response = await axios.get(`${url}/get-users`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getUsers API ', error);\r\n    }\r\n}\r\n\r\nexport const getUserSession = async () => {\r\n    try {\r\n        let response = await axios.get(`${url}/user/me`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getUserSession API ', error);\r\n    }\r\n}\r\n\r\n\r\nexport const getCookie = async (res) => {\r\n    try {\r\n        let response = await axios.get(`${url}/cookie/get`, {\r\n            headers: {\r\n                // 'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        });\r\n        console.log(response.data)\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getUserSession API ', error);\r\n    }\r\n};\r\n\r\nexport const setConversation = async (data) => {\r\n    try {\r\n        await axios.post(`${url}/conversation/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling setConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getConversation = async (users) => {\r\n    try {\r\n        let response = await axios.post(`${url}/conversation/get`, users);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getMessages = async (id) => {\r\n    try {\r\n        let response = await axios.get(`${url}/message/get?conversationId=${id}`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getMessages API ', error);\r\n    }\r\n}\r\n\r\nexport const newMessages = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/message/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}\r\n\r\nexport const uploadFile = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/file/upload`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}","\r\n\r\nexport const downloadMedia = async (e, originalImage) => {\r\n    e.preventDefault();\r\n    try {\r\n        fetch(originalImage)\r\n        .then(resp => resp.blob())\r\n        .then(blob => {\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.style.display = 'none';\r\n            a.href = url;\r\n\r\n            const nameSplit = originalImage.split(\"/\");\r\n            const duplicateName = nameSplit.pop();\r\n\r\n            // the filename you want\r\n            a.download = \"\" + duplicateName + \"\";\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n        })\r\n        .catch((error) => console.log('Error while downloading the image ', error))\r\n\r\n    } catch (error) {\r\n        console.log('Error while downloading the image ', error);\r\n    }\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const hours = new Date(date).getHours();\r\n    const minutes = new Date(date).getMinutes();\r\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n}","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport { styled, Box, Typography } from \"@mui/material\";\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nimport { setConversation, getConversation } from '../../../service/api';\r\nimport { emptyProfilePicture } from '../../../constants/data';\r\nimport { formatDate } from '../../../utils/common-utils';\r\n\r\nconst Component = styled(Box)`\r\n    height: 45px;\r\n    display: flex;\r\n    padding: 13px 0;\r\n    cursor: pointer;\r\n`;\r\n    \r\nconst Image = styled('img') ({\r\n    width: 50,\r\n    height: 50,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%',\r\n    padding: '0 14px'\r\n});\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n`;\r\n\r\nconst Timestamp = styled(Typography)`\r\n    font-size: 12px;\r\n    margin-left: auto;\r\n    color: #00000099;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    display: block;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n`;\r\n\r\nconst Conversation = ({ user }) => {\r\n    const url = user.picture || emptyProfilePicture;\r\n    \r\n    const { setPerson } = useContext(UserContext);\r\n    const { account, newMessageFlag }  = useContext(AccountContext);\r\n\r\n    const [message, setMessage] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getConversationMessage = async() => {\r\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\r\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\r\n        }\r\n        getConversationMessage();\r\n    }, [newMessageFlag]);\r\n\r\n    const getUser = async () => {\r\n        setPerson(user);\r\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\r\n    }\r\n\r\n    return (\r\n        <Component onClick={() => getUser()}>\r\n            <Box>\r\n                <Image src={url} alt=\"display picture\" />\r\n            </Box>\r\n            <Box style={{width: '100%'}}>\r\n                <Container>\r\n                    <Typography>{user.name}</Typography>\r\n                    { \r\n                        message?.text && \r\n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \r\n                    }\r\n                </Container>\r\n                <Box>\r\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\r\n                </Box>\r\n            </Box>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversation;","export const clientId = '165711366387-o1kesm68a8q72pqd5f8c2sac47h425aj.apps.googleusercontent.com'\r\n\r\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\r\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\r\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\r\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\r\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Box, styled, Divider } from '@mui/material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Conversation from './Conversation';\r\nimport { getUsers } from '../../../service/api';\r\n\r\nconst Component = styled(Box)`\r\n    overflow: overlay;\r\n    height: 81vh;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 0 0 0 70px;\r\n    background-color: #e9edef;\r\n    opacity: .6;\r\n`;\r\n\r\nconst Conversations = ({ text }) => {\r\n    const [users, setUsers] = useState([]);\r\n    \r\n    const { account, socket, setActiveUsers } = useContext(AccountContext);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let users = await getUsers();\r\n            let fiteredUsers = users.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\r\n            setUsers(fiteredUsers);\r\n        }\r\n        fetchData();\r\n    }, [text]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit('connectUser', account);\r\n        socket.current.on(\"getUsers\", users => {\r\n            setActiveUsers(users);\r\n        })\r\n    }, [account])\r\n\r\n    return (\r\n        <Component>\r\n            {\r\n                users && users.map((user, index) => (\r\n                    user.sub !== account.sub && \r\n                        <>\r\n                            <Conversation key={user.sub} user={user} />\r\n                            {\r\n                                users.length !== (index + 1)  && <StyledDivider />\r\n                            }\r\n                        </>\r\n                ))\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversations;","import { useState } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\n//components\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport Conversations from './Conversations';\r\n\r\nconst Menu = () => {\r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n        <Box>\r\n            <Header/>\r\n            <Search setText={setText} />\r\n            <Conversations text={text} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu;","import { useContext } from 'react';\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { Search, MoreVert } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { defaultProfilePicture } from '../../../constants/data';\r\n\r\nconst Header = styled(Box)`\r\n    height: 44px;\r\n    background: #ededed;\r\n    display: flex;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    width: 40,\r\n    height: 40,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n})\r\n\r\nconst Name = styled(Typography)`\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst RightContainer = styled(Box)`\r\n    margin-left: auto;\r\n    & > svg {\r\n        padding: 8px;\r\n        font-size: 22px;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst Status = styled(Typography)`\r\n    font-size: 12px !important;\r\n    color: rgb(0, 0, 0, 0.6);\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst ChatHeader = ({ person }) => {  \r\n\r\n    const url = person.picture || defaultProfilePicture;\r\n    \r\n    const { activeUsers } = useContext(AccountContext);\r\n\r\n    return (\r\n        <Header>\r\n            <Image src={url} alt=\"display picture\" />     \r\n            <Box>\r\n                <Name>{person.name}</Name>\r\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : 'Offline'}</Status>    \r\n            </Box>   \r\n            <RightContainer>\r\n                <Search />\r\n                <MoreVert />    \r\n            </RightContainer> \r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ChatHeader;","import { useContext } from 'react';\r\n\r\nimport { Box, styled, Typography } from '@mui/material';\r\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nimport { downloadMedia, formatDate } from '../../../utils/common-utils';\r\nimport { iconPDF } from '../../../constants/data';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n    \r\nconst Own = styled(Box)`\r\n    background: #dcf8c6;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 14px;\r\n    padding: 0 25px 0 5px;\r\n`;\r\n\r\nconst Time = styled(Typography)`\r\n    font-size: 10px;\r\n    color: #919191;\r\n    margin-top: 6px;\r\n    word-break: keep-all;\r\n    margin-top: auto;\r\n`;\r\n\r\nconst Message = ({ message }) => {\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            account.sub === message.senderId ? \r\n                <Own>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Own>\r\n            : \r\n                <Wrapper>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Wrapper>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst TextMessage = ({ message }) => {\r\n    \r\n    return (\r\n        <>\r\n            <Text>{message.text}</Text>\r\n            <Time>{formatDate(message.createdAt)}</Time>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ImageMessage = ({ message }) => {\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            {\r\n                message?.text?.includes('.pdf') ?\r\n                    <div style={{ display: 'flex' }}>\r\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\r\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\r\n                    </div>\r\n                : \r\n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\r\n            }\r\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n                <GetAppIcon \r\n                    onClick={(e) => downloadMedia(e, message.text)} \r\n                    fontSize='small' \r\n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \r\n                />\r\n                {formatDate(message.createdAt)}\r\n            </Time>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import { useEffect } from 'react';\r\n\r\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\r\nimport { Box, styled, InputBase } from '@mui/material';\r\n\r\nimport { uploadFile } from '../../../service/api';\r\n\r\nconst Container = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n    &  > * {\r\n        margin: 5px;\r\n        color: #919191;\r\n    }\r\n`;\r\n\r\nconst Search = styled(Box)`\r\n    border-radius: 18px;\r\n    background-color: #FFFFFF;\r\n    width: calc(94% - 100px);\r\n`;\r\n\r\nconst InputField = styled(InputBase)`\r\n    width: 100%;\r\n    padding: 20px;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nconst ClipIcon = styled(AttachFile)`\r\n    transform: 'rotate(40deg)'\r\n`;\r\n\r\n\r\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => {\r\n            if (file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n\r\n                const response = await uploadFile(data);\r\n                setImage(response.data);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file])\r\n\r\n    const onFileChange = (e) => {\r\n        setValue(e.target.files[0].name);\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <EmojiEmotions />\r\n            <label htmlFor=\"fileInput\">\r\n                <ClipIcon />\r\n            </label>\r\n            <input\r\n                type='file'\r\n                id=\"fileInput\"\r\n                style={{ display: 'none' }}\r\n                onChange={(e) => onFileChange(e)}\r\n            />\r\n\r\n            <Search>\r\n                <InputField\r\n                    placeholder=\"Type a message\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    onKeyPress={(e) => sendText(e)}\r\n                    value={value}\r\n                />\r\n            </Search>\r\n            <Mic />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, styled } from '@mui/material';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nimport { getMessages, newMessages } from '../../../service/api';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Message from './Message';\r\nimport Footer from './Footer';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\r\n    background-size: 50%;\r\n`;\r\n\r\nconst StyledFooter = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    // position: absolute;\r\n    width: 100%;\r\n    // bottom: 0\r\n`;\r\n    \r\nconst Component = styled(Box)`\r\n    height: 80vh;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 1px 80px;\r\n`;\r\n\r\n\r\n\r\nconst Messages = ({ person, conversation }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n    const [value, setValue] = useState();\r\n    const [file, setFile] = useState();\r\n    const [image, setImage] = useState();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        socket.current.on('getMessage', data => {\r\n            console.log(data)\r\n            setIncomingMessage({\r\n                ...data,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const getMessageDetails = async () => {\r\n            let data = await getMessages(conversation?._id);\r\n            setMessages(data);\r\n        }\r\n        getMessageDetails();\r\n    }, [conversation?._id, person._id, newMessageFlag]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \r\n            setMessages((prev) => [...prev, incomingMessage]);\r\n        \r\n    }, [incomingMessage, conversation]);\r\n\r\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\r\n    \r\n    const sendText = async (e) => {\r\n        let code = e.keyCode || e.which;\r\n        if(!value) return;\r\n\r\n        if(code === 13) { \r\n            let message = {};\r\n            if (!file) {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    receiverId: receiverId,\r\n                    conversationId: conversation._id,\r\n                    type: 'text',\r\n                    text: value\r\n                };\r\n            } else {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    conversationId: conversation._id,\r\n                    receiverId: receiverId,\r\n                    type: 'file',\r\n                    text: image\r\n                };\r\n            }\r\n\r\n            socket.current.emit('sendMessage', message);\r\n\r\n            // await newMessages(message);\r\n\r\n            setValue('');\r\n            setFile();\r\n            setImage('');\r\n            setNewMessageFlag(prev => !prev);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Component>\r\n                {\r\n                    messages && messages.map(message => (\r\n                        <Container ref={scrollRef}>\r\n                            <Message message={message} />\r\n                        </Container>\r\n                    ))\r\n                }\r\n            </Component>\r\n            <Footer \r\n                sendText={sendText} \r\n                value={value} \r\n                setValue={setValue} \r\n                setFile={setFile} \r\n                file={file} \r\n                setImage={setImage}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { getConversation } from '../../../service/api';\r\n\r\n//components\r\nimport ChatHeader from './ChatHeader';\r\nimport Messages from './Messages';\r\n\r\nconst ChatBox = () => {\r\n    const { person } = useContext(UserContext);\r\n    const { account } = useContext(AccountContext);\r\n\r\n    const [conversation, setConversation] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const getConversationDetails = async () => {\r\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\r\n            setConversation(data);\r\n        }\r\n        getConversationDetails();\r\n    }, [person.sub]);\r\n\r\n    return (\r\n        <Box style={{height: '75%'}}>\r\n            <ChatHeader person={person} />\r\n            <Messages person={person} conversation={conversation} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","\r\nimport { Box, styled, Typography, Divider } from '@mui/material';\r\n\r\nimport { emptyChatImage } from '../../../constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    background: #f8f9fa;\r\n    padding: 30px 0;\r\n    text-align: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 0 200px;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    marginTop: 100,\r\n    width: 400\r\n})\r\n   \r\nconst Title = styled(Typography)`\r\n    font-size: 32px;\r\n    font-family: inherit;\r\n    font-weight: 300;\r\n    color: #41525d;\r\n    margin-top: 25px 0 10px 0;\r\n`;\r\n\r\nconst SubTitle = styled(Typography)`\r\n    font-size: 14px;\r\n    color: #667781;\r\n    font-weight: 400;\r\n    font-family: inherit;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 40px 0;\r\n    opacity: 0.4;\r\n`;\r\n\r\nconst EmptyChat = () => {\r\n    \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Image src={emptyChatImage} alt=\"empty\" />\r\n                <Title>WhatsApp Web</Title>\r\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\r\n                <SubTitle>Use WhatsApp on up to 4 linked devices and 1 phone at the same time. </SubTitle>\r\n                <StyledDivider />\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default EmptyChat;","import { useContext } from 'react';\r\nimport { Dialog, styled, Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../context/UserProvider';\r\n\r\n//components\r\nimport Menu from './menu/Menu';\r\nimport ChatBox from './chat/ChatBox';\r\nimport EmptyChat from './chat/EmptyChat';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex;\r\n`;\r\n    \r\nconst LeftComponent = styled(Box)`\r\n    min-width: 450px;\r\n`;\r\n    \r\nconst RightComponent = styled(Box)`\r\n    width: 75%;\r\n    min-width: 700px;\r\n    height: 100%;\r\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\r\n`;\r\n\r\nconst dialogStyle = {\r\n    height: '95%',\r\n    width: '90%',\r\n    margin: '20px',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst ChatDialog = () => {\r\n\r\n    const { person } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Dialog \r\n            open={true} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            PaperProps={{ sx: dialogStyle }}\r\n            maxWidth={'md'}\r\n        >\r\n            <Component>\r\n                <LeftComponent>\r\n                    <Menu/>\r\n                </LeftComponent>\r\n                <RightComponent>\r\n                    {\r\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\r\n                    }\r\n                </RightComponent>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ChatDialog;","import { useContext, useEffect } from 'react';\r\n\r\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\r\n\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { addUser, getUserSession } from '../../service/api';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\nimport { qrCodeImage } from '../../constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex; \r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 56px 0 56px 56px;\r\n`;\r\n\r\nconst QRCOde = styled('img')({\r\n    margin: '50px 0 0 50px',\r\n    height: 264,\r\n    width: 264\r\n});\r\n\r\nconst Title = styled(Typography)`\r\n    font-size: 26px;\r\n    margin-bottom: 25px;\r\n    color: #525252;\r\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\r\n    font-weight: 300;\r\n`;\r\n\r\nconst StyledList = styled(List)`\r\n    &  > li {\r\n        padding: 0;\r\n        margin-top: 15px;\r\n        font-size: 18px;\r\n        line-height: 28px;\r\n        color: #4a4a4a;\r\n    }\r\n`;\r\n\r\nconst dialogStyle = {\r\n    marginTop: '12%',\r\n    height: '95%',\r\n    width: '60%',\r\n    maxWidth: '100',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst LoginDialog = () => {\r\n\r\n    const { setAccount, showloginButton, setShowloginButton, setShowlogoutButton } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        const userSession = async () => {\r\n            let account = await getUserSession();\r\n            console.log(account)\r\n            if (account && account.sub) {\r\n                loginSuccessContextUpdate(account);\r\n                console.log('user exists in cookie', account.sub)\r\n            }\r\n        }\r\n        userSession();\r\n    }, []);\r\n\r\n    const onLoginSuccess = async (res) => {\r\n        let account = jwt_decode(res.credential);\r\n        console.log('login success')\r\n        loginSuccessContextUpdate(account);\r\n        await addUser(account);\r\n    }\r\n\r\n    const loginSuccessContextUpdate = (account) => {\r\n        setAccount(account);\r\n        setShowloginButton(false);\r\n        setShowlogoutButton(true);\r\n    }\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            maxWidth={'md'}\r\n            PaperProps={{ sx: dialogStyle }}\r\n        >\r\n            <Component>\r\n                <Container>\r\n                    <Title>To use WhatsApp on your computer:</Title>\r\n                    <StyledList>\r\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\r\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\r\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\r\n                    </StyledList>\r\n                </Container>\r\n                <Box style={{position:'relative'}}>\r\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\r\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\r\n                        { showloginButton ?\r\n                            <GoogleLogin\r\n                                buttonText=\"\"\r\n                                onSuccess={onLoginSuccess}\r\n                                onError={onLoginFailure}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                auto_select={false}\r\n                            /> : null}\r\n                    </Box>\r\n                </Box>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default LoginDialog;","import { useContext } from 'react';\r\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\r\n\r\nimport { AccountContext } from '../context/AccountProvider';\r\n\r\n//components\r\nimport ChatDialog from './chat/ChatDialog';\r\nimport LoginDialog from './account/LoginDialog';\r\n\r\nconst Component = styled(Box)`\r\n    height: 100vh;\r\n    background: #DCDCDC;\r\n`;\r\n\r\nconst Header = styled(AppBar)`\r\n    background-color: #00A884;\r\n    height: 125px;\r\n    box-shadow: none;\r\n`;\r\n    \r\nconst LoginHeader = styled(AppBar)`\r\n    background: #00bfa5;\r\n    height: 200px;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst Messenger = () => {\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    return (\r\n        <Component>\r\n            {\r\n                account ? \r\n                <>\r\n                    <Header>\r\n                        <Toolbar></Toolbar>\r\n                    </Header>\r\n                    <ChatDialog />\r\n                </>\r\n                :\r\n                <>\r\n                    <LoginHeader>\r\n                        <Toolbar></Toolbar>\r\n                    </LoginHeader>\r\n                    <LoginDialog />\r\n                </>\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Messenger;"],"sourceRoot":""}